{"version":3,"sources":["webpack:///./src/templates/itemTemplate.tsx"],"names":["pageQuery","Template","project","data","allSitePage","edges","node","context","title","name","JSON","stringify"],"mappings":"kLAuBaA,EAAY,aAqBVC,UA3BE,SAAC,GAA4B,IACtCC,EADsC,EAA1BC,KACGC,YAAYC,MAAM,GAAGC,KAAKC,QAE/C,OAAO,gBAAC,IAAD,CAAMC,MAAON,EAAQO,MAAOC,KAAKC,UAAUT","file":"component---src-templates-item-template-tsx-59d89887fc2c791b3697.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { ProjectItem } from '../data';\nimport { Page } from '../components/page';\n\ninterface TemplateProps {\n  data: {\n    allSitePage: {\n      edges: {\n        node: {\n          context: ProjectItem;\n        };\n      }[];\n    };\n  };\n}\n\nconst Template = ({ data }: TemplateProps) => {\n  const project = data.allSitePage.edges[0].node.context;\n  // TODO: GP - implement item details component\n  return <Page title={project.name}>{JSON.stringify(project)}</Page>;\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    allSitePage(filter: { path: { eq: $path } }) {\n      edges {\n        node {\n          context {\n            name\n            category\n            location\n            year\n            titleImage\n            images\n            surface\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Template;\n"],"sourceRoot":""}