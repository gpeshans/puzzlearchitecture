{"version":3,"sources":["webpack:///./src/components/button/index.tsx","webpack:///./src/components/input/index.tsx","webpack:///./src/components/textarea/index.tsx","webpack:///./src/pages/contact/index.tsx"],"names":["Button","text","onClick","autoFocus","type","className","Input","onChange","name","required","placeholder","id","Textarea","Contact","React","state","setState","event","target","value","title","spanLg","spanXl","method","action","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","data","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","htmlFor","maxLength"],"mappings":"6LAQaA,G,UAAS,SAAC,GAAuE,IAArEC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,QAA+D,IAAtDC,iBAAsD,aAAnCC,YAAmC,MAA5B,SAA4B,EAC5F,OACE,0BAAQA,KAAMA,EAAMF,QAASA,EAASC,UAAWA,EAAWE,UAAU,YACnEJ,K,oCCFMK,G,UAAQ,SAAC,GAAsF,IAApFC,EAAoF,EAApFA,SAAUC,EAA0E,EAA1EA,KAA0E,IAApEJ,YAAoE,MAA7D,OAA6D,MAArDK,gBAAqD,aAAnCC,mBAAmC,MAArB,GAAqB,EAC1G,OACE,yBACEN,KAAMA,EACNO,GAAIH,EACJA,KAAMA,EACNE,YAAaA,EACbH,SAAUA,EACVF,UAAU,UACVI,SAAUA,MCTHG,G,UAAW,SAAC,GAA0E,IAAxEL,EAAwE,EAAxEA,SAAUC,EAA8D,EAA9DA,KAA8D,IAAxDC,gBAAwD,aAAtCC,mBAAsC,MAAxB,GAAwB,EACjG,OACE,4BACEC,GAAIH,EACJA,KAAMA,EACNE,YAAaA,EACbH,SAAUA,EACVF,UAAU,aACVI,SAAUA,MCqEDI,UArEC,WAAM,MACMC,WAAe,IAAlCC,EADa,KACNC,EADM,KAGdT,EAAW,SAACU,GAAe,MAC/BD,EAAS,OAAD,wBAAMD,GAAN,WAAcE,EAAMC,OAAOV,MAAOS,EAAMC,OAAOC,MAA/C,MAkBV,OACE,gBAAC,IAAD,CAAMC,MAAM,WACV,gBAAC,IAAD,CAAKf,UAAU,aACb,gBAAC,IAAD,CAAQgB,OAAQ,EAAGC,OAAQ,GACzB,gBAAC,IAAD,CAAKjB,UAAU,sBACb,oeAQF,gBAAC,IAAD,CAAKA,UAAU,iCAAf,cACA,wBACEG,KAAK,UACLe,OAAO,OACPC,OAAO,WACPC,eAAa,OACbC,wBAAsB,YACtBC,SAnCO,SAACV,GAChBA,EAAMW,iBACN,IAfYC,EAeNC,EAAOb,EAAMC,OACnBa,MAAM,IAAK,CACTR,OAAQ,OACRS,QAAS,CAAE,eAAgB,qCAC3BC,MAnBUJ,EAmBG,OAAD,QACV,YAAaC,EAAKI,aAAa,SAC5BnB,GApBFoB,OAAOC,KAAKP,GAChBQ,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBV,EAAKS,OACrEE,KAAK,QAqBHC,MAAK,kBAAMC,mBAASZ,EAAKI,aAAa,cACtCS,OAAM,SAACC,GAAD,OAAWC,MAAMD,QAyBlB,yBAAOxC,KAAK,SAASI,KAAK,YAAYW,MAAM,YAC5C,gBAAC,IAAD,CAAKd,UAAU,2BACb,gBAAC,IAAD,CAAQA,UAAU,+BAChB,yBAAOyC,QAAQ,QAAf,QACA,gBAAC,EAAD,CAAOtC,KAAK,OAAOC,UAAU,EAAMsC,UAAW,IAAKxC,SAAUA,KAE/D,gBAAC,IAAD,CAAQF,UAAU,+BAChB,yBAAOyC,QAAQ,SAAf,SACA,gBAAC,EAAD,CAAOtC,KAAK,QAAQJ,KAAK,QAAQK,UAAU,EAAMsC,UAAW,IAAKxC,SAAUA,KAE7E,gBAAC,IAAD,CAAQF,UAAU,+BAChB,yBAAOyC,QAAQ,WAAf,WACA,gBAAC,EAAD,CAAUtC,KAAK,UAAUC,UAAU,EAAMsC,UAAW,IAAKxC,SAAUA,KAErE,gBAAC,IAAD,CAAQF,UAAU,qEAChB,gBAAC,EAAD,CAAQJ,KAAK,OAAOG,KAAK,mB","file":"component---src-pages-contact-index-tsx-4d116579406cd73ef097.js","sourcesContent":["import * as React from 'react';\nimport './index.scss';\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  text: string;\n}\n\nexport const Button = ({ text, onClick, autoFocus = false, type = 'button' }: ButtonProps) => {\n  return (\n    <button type={type} onClick={onClick} autoFocus={autoFocus} className=\"pzButton\">\n      {text}\n    </button>\n  );\n};\n","import * as React from 'react';\n\nimport './index.scss';\n\ninterface InputProps extends React.HTMLProps<React.InputHTMLAttributes<HTMLInputElement>> {\n  onChange: (event: any) => void;\n  name: string;\n}\n\nexport const Input = ({ onChange, name, type = 'text', required = false, placeholder = '' }: InputProps) => {\n  return (\n    <input\n      type={type}\n      id={name}\n      name={name}\n      placeholder={placeholder}\n      onChange={onChange}\n      className=\"pzInput\"\n      required={required}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport './index.scss';\n\ninterface TextAreaProps extends React.HTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>> {\n  onChange: (event: any) => void;\n  name: string;\n}\n\nexport const Textarea = ({ onChange, name, required = false, placeholder = '' }: TextAreaProps) => {\n  return (\n    <textarea\n      id={name}\n      name={name}\n      placeholder={placeholder}\n      onChange={onChange}\n      className=\"pzTextarea\"\n      required={required}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { Page } from '../../components/page';\nimport { Button } from '../../components/button';\nimport { Row, Column } from '../../components/grid';\n\nimport './index.scss';\nimport { navigate } from 'gatsby';\nimport { Input } from '../../components/input';\nimport { Textarea } from '../../components/textarea';\n\nfunction encode(data: any) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&');\n}\n\nconst Contact = () => {\n  const [state, setState] = React.useState({});\n\n  const onChange = (event: any) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    const form = event.target;\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <Page title=\"Contact\">\n      <Row className=\"pzContact\">\n        <Column spanLg={6} spanXl={6}>\n          <Row className=\"pzContact__content\">\n            <p>\n              Puzzle is a collective of young and enthusiastic architects established in 2018. As a team, we have worked\n              on a wide spectrum of projects including exhibitions, interior design, architectural projects, conceptual\n              projects, research, etc. and successfully participated in many competitions. Throughout our work, we try\n              to have a research-oriented approach thus creating more sustainable, outspoken, and creative solutions for\n              all architectural challenges.\n            </p>\n          </Row>\n          <Row className=\"pzContact__contact-form-title\">Contact Us</Row>\n          <form\n            name=\"contact\"\n            method=\"post\"\n            action=\"/thanks/\"\n            data-netlify=\"true\"\n            data-netlify-honeypot=\"bot-field\"\n            onSubmit={onSubmit}\n          >\n            <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n            <Row className=\"pzContact__contact-form\">\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"name\">Name</label>\n                <Input name=\"name\" required={true} maxLength={120} onChange={onChange} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"email\">Email</label>\n                <Input name=\"email\" type=\"email\" required={true} maxLength={254} onChange={onChange} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"message\">Message</label>\n                <Textarea name=\"message\" required={true} maxLength={256} onChange={onChange} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row pzContact__contact-form-submit-button\">\n                <Button text=\"Send\" type=\"submit\" />\n              </Column>\n            </Row>\n          </form>\n        </Column>\n      </Row>\n    </Page>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}