{"version":3,"sources":["webpack:///./src/components/button/index.tsx","webpack:///./src/components/input/index.tsx","webpack:///./src/components/textarea/index.tsx","webpack:///./src/pages/contact/index.tsx"],"names":["Button","text","onClick","autoFocus","type","className","Input","onChange","id","required","placeholder","name","Textarea","Contact","React","setName","email","setEmail","message","setMessage","title","spanLg","spanXl","onSubmit","event","preventDefault","subject","encodeURIComponent","body","window","location","href","htmlFor","target","value","maxLength"],"mappings":"gIAQaA,G,UAAS,SAAC,GAAuE,IAArEC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,QAA+D,IAAtDC,iBAAsD,aAAnCC,YAAmC,MAA5B,SAA4B,EAC5F,OACE,0BAAQA,KAAMA,EAAMF,QAASA,EAASC,UAAWA,EAAWE,UAAU,YACnEJ,K,YCFMK,G,UAAQ,SAAC,GAAoF,IAAlFC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,GAAwE,IAApEJ,YAAoE,MAA7D,OAA6D,MAArDK,gBAAqD,aAAnCC,mBAAmC,MAArB,GAAqB,EACxG,OACE,yBACEN,KAAMA,EACNI,GAAIA,EACJG,KAAMH,EACNE,YAAaA,EACbH,SAAUA,EACVF,UAAU,UACVI,SAAUA,MCTHG,G,UAAW,SAAC,GAAwE,IAAtEL,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,GAA4D,IAAxDC,gBAAwD,aAAtCC,mBAAsC,MAAxB,GAAwB,EAC/F,OACE,4BACEF,GAAIA,EACJG,KAAMH,EACNE,YAAaA,EACbH,SAAUA,EACVF,UAAU,aACVI,SAAUA,M,UC4DDI,UAnEC,WAAM,MACIC,WAAe,IAAhCH,EADa,KACPI,EADO,OAEMD,WAAe,IAAlCE,EAFa,KAENC,EAFM,OAGUH,WAAe,IAAtCI,EAHa,KAGJC,EAHI,KA2BpB,OACE,gBAAC,IAAD,CAAMC,MAAM,WACV,gBAAC,IAAD,CAAKf,UAAU,aACb,gBAAC,IAAD,CAAQgB,OAAQ,EAAGC,OAAQ,GACzB,gBAAC,IAAD,CAAKjB,UAAU,sBACb,oeAQF,gBAAC,IAAD,CAAKA,UAAU,iCAAf,cACA,wBAAMM,KAAK,cAAcY,SAnChB,SAACC,GAChBA,EAAMC,iBAEN,IAAMC,EAAUC,mBAAsBhB,EAAJ,KAAaK,EAAb,KAC5BY,EAAOD,mBAAmBT,GAEhCW,OAAOC,SAASC,KAAhB,0CAAyDL,EAAzD,SAAyEE,IA8BjE,gBAAC,IAAD,CAAKvB,UAAU,2BAEb,gBAAC,IAAD,CAAQA,UAAU,+BAChB,yBAAO2B,QAAQ,QAAf,QACA,gBAAC,EAAD,CAAOxB,GAAG,OAAOD,SA/BV,SAACiB,GACpBT,EAAQS,EAAMS,OAAOC,QA8BgCzB,UAAU,EAAM0B,UAAW,OAEtE,gBAAC,IAAD,CAAQ9B,UAAU,+BAChB,yBAAO2B,QAAQ,SAAf,SACA,gBAAC,EAAD,CAAOxB,GAAG,QAAQJ,KAAK,QAAQG,SA/BvB,SAACiB,GACrBP,EAASO,EAAMS,OAAOC,QA8B8CzB,UAAU,EAAM0B,UAAW,OAErF,gBAAC,IAAD,CAAQ9B,UAAU,+BAChB,yBAAO2B,QAAQ,WAAf,WACA,gBAAC,EAAD,CAAUxB,GAAG,UAAUD,SA/Bb,SAACiB,GACvBL,EAAWK,EAAMS,OAAOC,QA8BsCzB,UAAU,EAAM0B,UAAW,OAE/E,gBAAC,IAAD,CAAQ9B,UAAU,qEAChB,gBAAC,EAAD,CAAQJ,KAAK,OAAOG,KAAK,mB","file":"component---src-pages-contact-index-tsx-6fef3be1b305eb2587e1.js","sourcesContent":["import * as React from 'react';\nimport './index.scss';\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  text: string;\n}\n\nexport const Button = ({ text, onClick, autoFocus = false, type = 'button' }: ButtonProps) => {\n  return (\n    <button type={type} onClick={onClick} autoFocus={autoFocus} className=\"pzButton\">\n      {text}\n    </button>\n  );\n};\n","import * as React from 'react';\n\nimport './index.scss';\n\ninterface InputProps extends React.HTMLProps<React.InputHTMLAttributes<HTMLInputElement>> {\n  onChange: (event: any) => void;\n  id: string;\n}\n\nexport const Input = ({ onChange, id, type = 'text', required = false, placeholder = '' }: InputProps) => {\n  return (\n    <input\n      type={type}\n      id={id}\n      name={id}\n      placeholder={placeholder}\n      onChange={onChange}\n      className=\"pzInput\"\n      required={required}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport './index.scss';\n\ninterface TextAreaProps extends React.HTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>> {\n  onChange: (event: any) => void;\n  id: string;\n}\n\nexport const Textarea = ({ onChange, id, required = false, placeholder = '' }: TextAreaProps) => {\n  return (\n    <textarea\n      id={id}\n      name={id}\n      placeholder={placeholder}\n      onChange={onChange}\n      className=\"pzTextarea\"\n      required={required}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { Page } from '../../components/page';\nimport { Button } from '../../components/button';\nimport { Row, Column } from '../../components/grid';\nimport { Input } from '../../components/input';\nimport { Textarea } from '../../components/textarea';\n\nimport './index.scss';\n\nconst Contact = () => {\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const emailAddress = 'puzzle.arch@outlook.com';\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n\n    const subject = encodeURIComponent(`${name} (${email})`);\n    const body = encodeURIComponent(message);\n\n    window.location.href = `mailto:${emailAddress}?subject=${subject}&body=${body}`;\n  };\n\n  const onNameChange = (event: any) => {\n    setName(event.target.value);\n  };\n\n  const onEmailChange = (event: any) => {\n    setEmail(event.target.value);\n  };\n\n  const onMessageChange = (event: any) => {\n    setMessage(event.target.value);\n  };\n\n  return (\n    <Page title=\"Contact\">\n      <Row className=\"pzContact\">\n        <Column spanLg={6} spanXl={6}>\n          <Row className=\"pzContact__content\">\n            <p>\n              Puzzle is a collective of young and enthusiastic architects established in 2018. As a team, we have worked\n              on a wide spectrum of projects including exhibitions, interior design, architectural projects, conceptual\n              projects, research, etc. and successfully participated in many competitions. Throughout our work, we try\n              to have a research-oriented approach thus creating more sustainable, outspoken, and creative solutions for\n              all architectural challenges.\n            </p>\n          </Row>\n          <Row className=\"pzContact__contact-form-title\">Contact Us</Row>\n          <form name=\"contactForm\" onSubmit={onSubmit}>\n            <Row className=\"pzContact__contact-form\">\n              {/* TODO: GP - implement send email lambda and adjust the form */}\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"name\">Name</label>\n                <Input id=\"name\" onChange={onNameChange} required={true} maxLength={120} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"email\">Email</label>\n                <Input id=\"email\" type=\"email\" onChange={onEmailChange} required={true} maxLength={254} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row\">\n                <label htmlFor=\"message\">Message</label>\n                <Textarea id=\"message\" onChange={onMessageChange} required={true} maxLength={256} />\n              </Column>\n              <Column className=\"pzContact__contact-form-row pzContact__contact-form-submit-button\">\n                <Button text=\"Send\" type=\"submit\" />\n              </Column>\n            </Row>\n          </form>\n        </Column>\n      </Row>\n    </Page>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}