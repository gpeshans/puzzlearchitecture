@import '../../styles/variables.scss';

// Grid
// grid width per modifier
$grid__bp-sm: $screen__bp-sm;
$grid__bp-md: $screen__bp-md;
$grid__bp-lg: $screen__bp-lg;
$grid__bp-xl: $screen__bp-xl;

// number of columns
$grid__cols: 12;

// map of modifier and breakpoint (width)
$map-grid-props: (
  '': 0,
  '-sm': $grid__bp-sm,
  '-md': $grid__bp-md,
  '-lg': $grid__bp-lg,
  '-xl': $grid__bp-xl,
);

@mixin create-mq($breakpoint, $min-or-max) {
  @if ($breakpoint == 0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $breakpoint *1px) {
      @content;
    }
  }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
  @include create-mq($breakpoint, 'min') {
    @if ($modifier == '') {
      $modifier: '-sm';
    }
    &__col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    @for $i from 1 through $grid-cols {
      &__col#{$modifier}-#{$i} {
        flex-basis: (100 / ($grid-cols / $i)) * 1%;
      }
      &__col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($grid-cols / $i)) * 1%;
      }
    }
  }
}

@each $modifier, $breakpoint in $map-grid-props {
  @if ($modifier == '') {
    $modifier: '-xs';
  }
  @include create-mq($breakpoint - 1, 'max') {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }
  @include create-mq($breakpoint, 'min') {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}

.container {
  max-width: $grid__bp-md * 1px;
  margin: 0 auto;
  padding: 1vh;

  &--fluid {
    margin: 0;
    max-width: 100%;
  }

  &__row {
    display: flex;
    flex-wrap: wrap;

    &__row {
      margin-left: 0;
      margin-right: 0;
    }
  }

  @each $modifier, $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid__cols, $breakpoint);
  }
}
