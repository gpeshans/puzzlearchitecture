{"version":3,"sources":["webpack:///./src/templates/itemTemplate.tsx","webpack:///./src/components/breadcrumbs/index.tsx"],"names":["pageQuery","ItemTemplate","project","data","allSitePage","edges","node","context","title","name","className","category","linkCategory","spanSm","spanMd","spanLg","spanXl","location","year","surface","description","filename","titleImage","images","map","image","key","Breadcrumbs","HomeLink","to","CategoryLink"],"mappings":"mOAkEaA,EAAY,aAqBVC,UAzEM,SAAC,GAA4B,IAC1CC,EAD0C,EAA1BC,KACDC,YAAYC,MAAM,GAAGC,KAAKC,QAC/C,OACE,gBAAC,IAAD,CAAMC,MAAON,EAAQO,KAAMC,UAAU,mBACnC,gBAAC,IAAD,CAAaC,SAAUT,EAAQS,SAAUC,cAAc,IACvD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQC,OAAQ,GAAIC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAChD,gBAAC,IAAD,CAAKN,UAAU,0BAA0BR,EAAQO,MACjD,gBAAC,IAAD,CAAKC,UAAU,0BACb,gBAAC,IAAD,CAAQA,UAAU,iCAAlB,YACA,gBAAC,IAAD,CAAQA,UAAU,iCAAiCR,EAAQe,WAE7D,gBAAC,IAAD,CAAKP,UAAU,0BACb,gBAAC,IAAD,CAAQA,UAAU,iCAAlB,QACA,gBAAC,IAAD,CAAQA,UAAU,iCAAiCR,EAAQgB,OAE5DhB,EAAQiB,QACP,gBAAC,IAAD,CAAKT,UAAU,0BACb,gBAAC,IAAD,CAAQA,UAAU,iCAAlB,WACA,gBAAC,IAAD,CAAQA,UAAU,iCACZR,EAAQiB,QADd,KAEE,kCAGF,KAEHjB,EAAQkB,YACP,gBAAC,IAAD,CAAKV,UAAU,0BACb,gBAAC,IAAD,CAAQA,UAAU,iCAAlB,eACA,gBAAC,IAAD,CAAQA,UAAU,iCAAiCR,EAAQkB,cAE3D,MAEN,gBAAC,IAAD,CAAQP,OAAQ,GAAIC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAChD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQN,UAAU,0BAChB,gBAAC,IAAD,CAAOW,SAAUnB,EAAQoB,eAG5BpB,EAAQqB,OAAOC,KAAI,SAAAC,GAAK,OACvB,gBAAC,IAAD,CAAKC,IAAKD,GACR,gBAAC,IAAD,CAAQf,UAAU,0BAChB,gBAAC,IAAD,CAAOW,SAAUI,c,kFCxDjC,8DAWaE,GAXb,UAW2B,SAAC,GAAwD,IAAtDhB,EAAsD,EAAtDA,SAAsD,IAA5CC,oBAA4C,SAC5EgB,EAAW,kBAAM,gBAAC,OAAD,CAAMC,GAAG,KAAT,SACjBC,EAAe,kBAAOlB,EAAe,gBAAC,OAAD,CAAMiB,GAAIlB,GAAWA,GAAmB,gCAAGA,IACtF,OACE,uBAAKD,UAAU,iBACb,gBAACkB,EAAD,MACA,uCACA,gBAACE,EAAD","file":"component---src-templates-item-template-tsx-b088eec0d835b1d3b96e.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport { Page } from '../components/page';\nimport { Row, Column } from '../components/grid';\nimport { Image } from '../components/image';\nimport { ProjectsListQuery } from '../data';\nimport './itemTemplate.scss';\nimport { Breadcrumbs } from '../components/breadcrumbs';\n\ninterface TemplateProps {\n  data: ProjectsListQuery;\n}\n\nconst ItemTemplate = ({ data }: TemplateProps) => {\n  const project = data.allSitePage.edges[0].node.context;\n  return (\n    <Page title={project.name} className=\"pz-ItemTemplate\">\n      <Breadcrumbs category={project.category} linkCategory={true} />\n      <Row>\n        <Column spanSm={12} spanMd={4} spanLg={3} spanXl={3}>\n          <Row className=\"pz-ItemTemplate__Title\">{project.name}</Row>\n          <Row className=\"pz-ItemTemplate__Field\">\n            <Column className=\"pz-ItemTemplate__Field__Label\">Location</Column>\n            <Column className=\"pz-ItemTemplate__Field__Value\">{project.location}</Column>\n          </Row>\n          <Row className=\"pz-ItemTemplate__Field\">\n            <Column className=\"pz-ItemTemplate__Field__Label\">Year</Column>\n            <Column className=\"pz-ItemTemplate__Field__Value\">{project.year}</Column>\n          </Row>\n          {project.surface ? (\n            <Row className=\"pz-ItemTemplate__Field\">\n              <Column className=\"pz-ItemTemplate__Field__Label\">Surface</Column>\n              <Column className=\"pz-ItemTemplate__Field__Value\">\n                {`${project.surface} m`}\n                <sup>2</sup>\n              </Column>\n            </Row>\n          ) : null}\n\n          {project.description ? (\n            <Row className=\"pz-ItemTemplate__Field\">\n              <Column className=\"pz-ItemTemplate__Field__Label\">Description</Column>\n              <Column className=\"pz-ItemTemplate__Field__Value\">{project.description}</Column>\n            </Row>\n          ) : null}\n        </Column>\n        <Column spanSm={12} spanMd={8} spanLg={9} spanXl={9}>\n          <Row>\n            <Column className=\"pz-ItemTemplate__Image\">\n              <Image filename={project.titleImage} />\n            </Column>\n          </Row>\n          {project.images.map(image => (\n            <Row key={image}>\n              <Column className=\"pz-ItemTemplate__Image\">\n                <Image filename={image} />\n              </Column>\n            </Row>\n          ))}\n        </Column>\n      </Row>\n    </Page>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    allSitePage(filter: { path: { eq: $path } }) {\n      edges {\n        node {\n          context {\n            name\n            category\n            location\n            year\n            titleImage\n            images\n            surface\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ItemTemplate;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport { Category } from '../../data';\nimport './index.scss';\n\ninterface BreadcrumbProps {\n  category: Category;\n  linkCategory?: boolean;\n}\n\nexport const Breadcrumbs = ({ category, linkCategory = false }: BreadcrumbProps) => {\n  const HomeLink = () => <Link to=\"/\">Home</Link>;\n  const CategoryLink = () => (linkCategory ? <Link to={category}>{category}</Link> : <>{category}</>);\n  return (\n    <div className=\"pzBreadcrumbs\">\n      <HomeLink />\n      <> / </>\n      <CategoryLink />\n    </div>\n  );\n};\n"],"sourceRoot":""}